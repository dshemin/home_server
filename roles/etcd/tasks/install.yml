---
- name: "Look for existing etcd binary {{ etcd_executable }}"
  ansible.builtin.stat:
    path: "{{ etcd_executable }}"
  register: "etcd_executable_present"

- name: "Get currently installed etcd version"
  ansible.builtin.shell: >
    set -o pipefail &&
    {{ etcd_executable }} --version | cut -d' ' -f3 | head -n1 | tr -d '\n'
  args:
    executable: "/bin/bash"
  changed_when: false
  check_mode: false
  register: "etcd_executable_version"
  when: "etcd_executable_present.stat.exists"

- name: "Download and install etcd"
  when: (etcd_executable_version.stdout) | default("") != etcd_version
  block:
    - name: "Download and extract etcd archive"
      ansible.builtin.unarchive:
        src: "{{ etcd_download_url }}"
        dest: "/tmp/"
        remote_src: true
      retries: 3
      delay: 3

    - name: "Install etcd's binaries"
      ansible.builtin.copy:
        src: "{{ etcd_tmp_dir }}/{{ item.file }}"
        dest: "{{ item.executable }}"
        remote_src: true
        mode: 0777
      notify: "Restart etcd"
      with_items:
        - file: "etcd"
          executable: "{{ etcd_executable }}"
        - file: "etcdctl"
          executable: "{{ etcdctl_executable }}"
        - file: "etcdutl"
          executable: "{{ etcdutl_executable }}"
  always:
    - name: "Remove etcd archive"
      ansible.builtin.file:
        path: "{{ etcd_tmp_dir }}"
        state: "absent"
